{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MONISHAA\\\\ew\\\\frontend\\\\src\\\\components\\\\QRGenerator.js\";\nimport React from \"react\";\nimport { QRCodeCanvas } from \"qrcode.react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QRGenerator() {\n  const user = JSON.parse(localStorage.getItem(\"user\") || \"null\");\n  if (!user) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-center\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please login.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 54\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 20\n  }, this);\n\n  // Keep QR simple: include just the email (hospitals will fetch details by email)\n  const qrData = JSON.stringify({\n    email: user.email\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"badge\",\n        children: \"Your QR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Show this QR in emergencies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(QRCodeCanvas, {\n          value: qrData,\n          size: 200,\n          includeMargin: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        style: {\n          marginTop: 8\n        },\n        children: [user.name, \" \\u2022 \", user.bloodGroup]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = QRGenerator;\nvar _c;\n$RefreshReg$(_c, \"QRGenerator\");","map":{"version":3,"names":["React","QRCodeCanvas","jsxDEV","_jsxDEV","QRGenerator","user","JSON","parse","localStorage","getItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","qrData","stringify","email","style","textAlign","padding","value","size","includeMargin","marginTop","name","bloodGroup","_c","$RefreshReg$"],"sources":["C:/Users/MONISHAA/ew/frontend/src/components/QRGenerator.js"],"sourcesContent":["import React from \"react\";\r\nimport { QRCodeCanvas } from \"qrcode.react\";\r\n\r\nexport default function QRGenerator(){\r\n  const user = JSON.parse(localStorage.getItem(\"user\") || \"null\");\r\n  if(!user) return <div className=\"container-center\"><p>Please login.</p></div>;\r\n\r\n  // Keep QR simple: include just the email (hospitals will fetch details by email)\r\n  const qrData = JSON.stringify({ email: user.email });\r\n\r\n  return (\r\n    <div className=\"container-center\">\r\n      <div className=\"card\" style={{textAlign:\"center\"}}>\r\n        <div className=\"badge\">Your QR</div>\r\n        <h2>Show this QR in emergencies</h2>\r\n        <div style={{padding:16}}>\r\n          <QRCodeCanvas value={qrData} size={200} includeMargin />\r\n        </div>\r\n        <p className=\"lead\" style={{marginTop:8}}>{user.name} â€¢ {user.bloodGroup}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,WAAWA,CAAA,EAAE;EACnC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC;EAC/D,IAAG,CAACJ,IAAI,EAAE,oBAAOF,OAAA;IAAKO,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAACR,OAAA;MAAAQ,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;;EAE7E;EACA,MAAMC,MAAM,GAAGV,IAAI,CAACW,SAAS,CAAC;IAAEC,KAAK,EAAEb,IAAI,CAACa;EAAM,CAAC,CAAC;EAEpD,oBACEf,OAAA;IAAKO,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/BR,OAAA;MAAKO,SAAS,EAAC,MAAM;MAACS,KAAK,EAAE;QAACC,SAAS,EAAC;MAAQ,CAAE;MAAAT,QAAA,gBAChDR,OAAA;QAAKO,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpCZ,OAAA;QAAAQ,QAAA,EAAI;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpCZ,OAAA;QAAKgB,KAAK,EAAE;UAACE,OAAO,EAAC;QAAE,CAAE;QAAAV,QAAA,eACvBR,OAAA,CAACF,YAAY;UAACqB,KAAK,EAAEN,MAAO;UAACO,IAAI,EAAE,GAAI;UAACC,aAAa;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eACNZ,OAAA;QAAGO,SAAS,EAAC,MAAM;QAACS,KAAK,EAAE;UAACM,SAAS,EAAC;QAAC,CAAE;QAAAd,QAAA,GAAEN,IAAI,CAACqB,IAAI,EAAC,UAAG,EAACrB,IAAI,CAACsB,UAAU;MAAA;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACa,EAAA,GAnBuBxB,WAAW;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}