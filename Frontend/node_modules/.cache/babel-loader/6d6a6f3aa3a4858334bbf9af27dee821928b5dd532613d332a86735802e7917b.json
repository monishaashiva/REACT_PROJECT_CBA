{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n// ... other imports\n\nconst UserLoginPage = () => {\n  _s();\n  // ... state declarations\n\n  const navigate = useNavigate();\n\n  // ... handleInputChange, validateForm stay the same\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    try {\n      if (isLogin) {\n        // Login API call\n        const response = await axios.post('http://localhost:5000/api/auth/login', {\n          email: formData.email,\n          password: formData.password\n        });\n        const {\n          token,\n          user\n        } = response.data;\n        localStorage.setItem('token', token);\n        localStorage.setItem('registeredUser', JSON.stringify(user));\n        localStorage.setItem('isAuthenticated', 'true');\n        navigate('/user/dashboard');\n      } else {\n        // Signup API call\n        await axios.post('http://localhost:5000/api/auth/register', {\n          name: formData.name,\n          email: formData.email,\n          password: formData.password\n        });\n        alert('Registration successful! Please log in.');\n        setIsLogin(true);\n        setFormData({\n          email: '',\n          password: '',\n          confirmPassword: '',\n          name: ''\n        });\n      }\n    } catch (error) {\n      if (error.response) {\n        setAuthError(error.response.data.message || 'Authentication error');\n      } else {\n        setAuthError('Network error');\n      }\n    }\n  };\n\n  // ... rest of component JSX remains unchanged\n};\n_s(UserLoginPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = UserLoginPage;\nexport default UserLoginPage;\nvar _c;\n$RefreshReg$(_c, \"UserLoginPage\");","map":{"version":3,"names":["useNavigate","axios","UserLoginPage","_s","navigate","handleSubmit","e","preventDefault","validateForm","isLogin","response","post","email","formData","password","token","user","data","localStorage","setItem","JSON","stringify","name","alert","setIsLogin","setFormData","confirmPassword","error","setAuthError","message","_c","$RefreshReg$"],"sources":["C:/Users/MONISHAA/Wallet/Frontend/src/pages/user/UserLoginPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n// ... other imports\r\n\r\nconst UserLoginPage: React.FC = () => {\r\n  // ... state declarations\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // ... handleInputChange, validateForm stay the same\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) return;\r\n\r\n    try {\r\n      if (isLogin) {\r\n        // Login API call\r\n        const response = await axios.post('http://localhost:5000/api/auth/login', {\r\n          email: formData.email,\r\n          password: formData.password,\r\n        });\r\n        const { token, user } = response.data;\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('registeredUser', JSON.stringify(user));\r\n        localStorage.setItem('isAuthenticated', 'true');\r\n        navigate('/user/dashboard');\r\n      } else {\r\n        // Signup API call\r\n        await axios.post('http://localhost:5000/api/auth/register', {\r\n          name: formData.name,\r\n          email: formData.email,\r\n          password: formData.password,\r\n        });\r\n        alert('Registration successful! Please log in.');\r\n        setIsLogin(true);\r\n        setFormData({ email: '', password: '', confirmPassword: '', name: '' });\r\n      }\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        setAuthError(error.response.data.message || 'Authentication error');\r\n      } else {\r\n        setAuthError('Network error');\r\n      }\r\n    }\r\n  };\r\n\r\n  // ... rest of component JSX remains unchanged\r\n};\r\n\r\nexport default UserLoginPage;\r\n"],"mappings":";AACA,SAAeA,WAAW,QAAQ,kBAAkB;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB;;AAEA,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC;;EAEA,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;;EAE9B;;EAEA,MAAMK,YAAY,GAAG,MAAOC,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE;IAErB,IAAI;MACF,IAAIC,OAAO,EAAE;QACX;QACA,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,sCAAsC,EAAE;UACxEC,KAAK,EAAEC,QAAQ,CAACD,KAAK;UACrBE,QAAQ,EAAED,QAAQ,CAACC;QACrB,CAAC,CAAC;QACF,MAAM;UAAEC,KAAK;UAAEC;QAAK,CAAC,GAAGN,QAAQ,CAACO,IAAI;QACrCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;QACpCG,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC;QAC5DE,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAE,MAAM,CAAC;QAC/Cf,QAAQ,CAAC,iBAAiB,CAAC;MAC7B,CAAC,MAAM;QACL;QACA,MAAMH,KAAK,CAACU,IAAI,CAAC,yCAAyC,EAAE;UAC1DW,IAAI,EAAET,QAAQ,CAACS,IAAI;UACnBV,KAAK,EAAEC,QAAQ,CAACD,KAAK;UACrBE,QAAQ,EAAED,QAAQ,CAACC;QACrB,CAAC,CAAC;QACFS,KAAK,CAAC,yCAAyC,CAAC;QAChDC,UAAU,CAAC,IAAI,CAAC;QAChBC,WAAW,CAAC;UAAEb,KAAK,EAAE,EAAE;UAAEE,QAAQ,EAAE,EAAE;UAAEY,eAAe,EAAE,EAAE;UAAEJ,IAAI,EAAE;QAAG,CAAC,CAAC;MACzE;IACF,CAAC,CAAC,OAAOK,KAAU,EAAE;MACnB,IAAIA,KAAK,CAACjB,QAAQ,EAAE;QAClBkB,YAAY,CAACD,KAAK,CAACjB,QAAQ,CAACO,IAAI,CAACY,OAAO,IAAI,sBAAsB,CAAC;MACrE,CAAC,MAAM;QACLD,YAAY,CAAC,eAAe,CAAC;MAC/B;IACF;EACF,CAAC;;EAED;AACF,CAAC;AAACzB,EAAA,CA5CID,aAAuB;EAAA,QAGVF,WAAW;AAAA;AAAA8B,EAAA,GAHxB5B,aAAuB;AA8C7B,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}